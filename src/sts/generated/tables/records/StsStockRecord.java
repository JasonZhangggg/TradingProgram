/*
 * This file is generated by jOOQ.
 */
package sts.generated.tables.records;


import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import sts.generated.tables.StsStock;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StsStockRecord extends UpdatableRecordImpl<StsStockRecord> implements Record5<String, String, Integer, BigDecimal, Byte> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>mydev.sts_stock.ticker</code>.
     */
    public void setTicker(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>mydev.sts_stock.ticker</code>.
     */
    public String getTicker() {
        return (String) get(0);
    }

    /**
     * Setter for <code>mydev.sts_stock.company</code>.
     */
    public void setCompany(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>mydev.sts_stock.company</code>.
     */
    public String getCompany() {
        return (String) get(1);
    }

    /**
     * Setter for <code>mydev.sts_stock.shares</code>.
     */
    public void setShares(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>mydev.sts_stock.shares</code>.
     */
    public Integer getShares() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>mydev.sts_stock.init_price</code>.
     */
    public void setInitPrice(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>mydev.sts_stock.init_price</code>.
     */
    public BigDecimal getInitPrice() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>mydev.sts_stock.is_listed</code>.
     */
    public void setIsListed(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>mydev.sts_stock.is_listed</code>.
     */
    public Byte getIsListed() {
        return (Byte) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, Integer, BigDecimal, Byte> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, String, Integer, BigDecimal, Byte> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return StsStock.STS_STOCK.TICKER;
    }

    @Override
    public Field<String> field2() {
        return StsStock.STS_STOCK.COMPANY;
    }

    @Override
    public Field<Integer> field3() {
        return StsStock.STS_STOCK.SHARES;
    }

    @Override
    public Field<BigDecimal> field4() {
        return StsStock.STS_STOCK.INIT_PRICE;
    }

    @Override
    public Field<Byte> field5() {
        return StsStock.STS_STOCK.IS_LISTED;
    }

    @Override
    public String component1() {
        return getTicker();
    }

    @Override
    public String component2() {
        return getCompany();
    }

    @Override
    public Integer component3() {
        return getShares();
    }

    @Override
    public BigDecimal component4() {
        return getInitPrice();
    }

    @Override
    public Byte component5() {
        return getIsListed();
    }

    @Override
    public String value1() {
        return getTicker();
    }

    @Override
    public String value2() {
        return getCompany();
    }

    @Override
    public Integer value3() {
        return getShares();
    }

    @Override
    public BigDecimal value4() {
        return getInitPrice();
    }

    @Override
    public Byte value5() {
        return getIsListed();
    }

    @Override
    public StsStockRecord value1(String value) {
        setTicker(value);
        return this;
    }

    @Override
    public StsStockRecord value2(String value) {
        setCompany(value);
        return this;
    }

    @Override
    public StsStockRecord value3(Integer value) {
        setShares(value);
        return this;
    }

    @Override
    public StsStockRecord value4(BigDecimal value) {
        setInitPrice(value);
        return this;
    }

    @Override
    public StsStockRecord value5(Byte value) {
        setIsListed(value);
        return this;
    }

    @Override
    public StsStockRecord values(String value1, String value2, Integer value3, BigDecimal value4, Byte value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StsStockRecord
     */
    public StsStockRecord() {
        super(StsStock.STS_STOCK);
    }

    /**
     * Create a detached, initialised StsStockRecord
     */
    public StsStockRecord(String ticker, String company, Integer shares, BigDecimal initPrice, Byte isListed) {
        super(StsStock.STS_STOCK);

        setTicker(ticker);
        setCompany(company);
        setShares(shares);
        setInitPrice(initPrice);
        setIsListed(isListed);
    }
}
