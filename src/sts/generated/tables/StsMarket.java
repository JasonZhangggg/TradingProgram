/*
 * This file is generated by jOOQ.
 */
package sts.generated.tables;


import java.util.function.Function;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Function6;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Records;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.SelectField;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import sts.generated.Mydev;
import sts.generated.tables.records.StsMarketRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StsMarket extends TableImpl<StsMarketRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>mydev.sts_market</code>
     */
    public static final StsMarket STS_MARKET = new StsMarket();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StsMarketRecord> getRecordType() {
        return StsMarketRecord.class;
    }

    /**
     * The column <code>mydev.sts_market.market_name</code>.
     */
    public final TableField<StsMarketRecord, String> MARKET_NAME = createField(DSL.name("market_name"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>mydev.sts_market.open_time</code>.
     */
    public final TableField<StsMarketRecord, Integer> OPEN_TIME = createField(DSL.name("open_time"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>mydev.sts_market.close_time</code>.
     */
    public final TableField<StsMarketRecord, Integer> CLOSE_TIME = createField(DSL.name("close_time"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>mydev.sts_market.open_days</code>.
     */
    public final TableField<StsMarketRecord, Integer> OPEN_DAYS = createField(DSL.name("open_days"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>mydev.sts_market.is_open</code>.
     */
    public final TableField<StsMarketRecord, Byte> IS_OPEN = createField(DSL.name("is_open"), SQLDataType.TINYINT, this, "");

    /**
     * The column <code>mydev.sts_market.current_market_day</code>.
     */
    public final TableField<StsMarketRecord, Integer> CURRENT_MARKET_DAY = createField(DSL.name("current_market_day"), SQLDataType.INTEGER, this, "");

    private StsMarket(Name alias, Table<StsMarketRecord> aliased) {
        this(alias, aliased, null);
    }

    private StsMarket(Name alias, Table<StsMarketRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>mydev.sts_market</code> table reference
     */
    public StsMarket(String alias) {
        this(DSL.name(alias), STS_MARKET);
    }

    /**
     * Create an aliased <code>mydev.sts_market</code> table reference
     */
    public StsMarket(Name alias) {
        this(alias, STS_MARKET);
    }

    /**
     * Create a <code>mydev.sts_market</code> table reference
     */
    public StsMarket() {
        this(DSL.name("sts_market"), null);
    }

    public <O extends Record> StsMarket(Table<O> child, ForeignKey<O, StsMarketRecord> key) {
        super(child, key, STS_MARKET);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Mydev.MYDEV;
    }

    @Override
    public StsMarket as(String alias) {
        return new StsMarket(DSL.name(alias), this);
    }

    @Override
    public StsMarket as(Name alias) {
        return new StsMarket(alias, this);
    }

    @Override
    public StsMarket as(Table<?> alias) {
        return new StsMarket(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public StsMarket rename(String name) {
        return new StsMarket(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StsMarket rename(Name name) {
        return new StsMarket(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public StsMarket rename(Table<?> name) {
        return new StsMarket(name.getQualifiedName(), null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, Integer, Integer, Integer, Byte, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Function)}.
     */
    public <U> SelectField<U> mapping(Function6<? super String, ? super Integer, ? super Integer, ? super Integer, ? super Byte, ? super Integer, ? extends U> from) {
        return convertFrom(Records.mapping(from));
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Class,
     * Function)}.
     */
    public <U> SelectField<U> mapping(Class<U> toType, Function6<? super String, ? super Integer, ? super Integer, ? super Integer, ? super Byte, ? super Integer, ? extends U> from) {
        return convertFrom(toType, Records.mapping(from));
    }
}
