/*
 * This file is generated by jOOQ.
 */
package sts.generated;


import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;

import sts.generated.tables.StsMarketHistory;
import sts.generated.tables.StsPortfolio;
import sts.generated.tables.StsStock;
import sts.generated.tables.StsStockHistory;
import sts.generated.tables.StsStockOrder;
import sts.generated.tables.StsUser;
import sts.generated.tables.records.StsMarketHistoryRecord;
import sts.generated.tables.records.StsPortfolioRecord;
import sts.generated.tables.records.StsStockHistoryRecord;
import sts.generated.tables.records.StsStockOrderRecord;
import sts.generated.tables.records.StsStockRecord;
import sts.generated.tables.records.StsUserRecord;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * mydev.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<StsMarketHistoryRecord> KEY_STS_MARKET_HISTORY_PRIMARY = Internal.createUniqueKey(StsMarketHistory.STS_MARKET_HISTORY, DSL.name("KEY_sts_market_history_PRIMARY"), new TableField[] { StsMarketHistory.STS_MARKET_HISTORY.MARKET_DAY }, true);
    public static final UniqueKey<StsStockRecord> KEY_STS_STOCK_PRIMARY = Internal.createUniqueKey(StsStock.STS_STOCK, DSL.name("KEY_sts_stock_PRIMARY"), new TableField[] { StsStock.STS_STOCK.TICKER }, true);
    public static final UniqueKey<StsStockHistoryRecord> KEY_STS_STOCK_HISTORY_PRIMARY = Internal.createUniqueKey(StsStockHistory.STS_STOCK_HISTORY, DSL.name("KEY_sts_stock_history_PRIMARY"), new TableField[] { StsStockHistory.STS_STOCK_HISTORY.UNIQID }, true);
    public static final UniqueKey<StsUserRecord> KEY_STS_USER_IDX_UNIQ_LOGIN = Internal.createUniqueKey(StsUser.STS_USER, DSL.name("KEY_sts_user_idx_uniq_login"), new TableField[] { StsUser.STS_USER.LOGIN, StsUser.STS_USER.ROLE }, true);
    public static final UniqueKey<StsUserRecord> KEY_STS_USER_PRIMARY = Internal.createUniqueKey(StsUser.STS_USER, DSL.name("KEY_sts_user_PRIMARY"), new TableField[] { StsUser.STS_USER.USER_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<StsPortfolioRecord, StsUserRecord> STS_PORTFOLIO_IBFK_1 = Internal.createForeignKey(StsPortfolio.STS_PORTFOLIO, DSL.name("sts_portfolio_ibfk_1"), new TableField[] { StsPortfolio.STS_PORTFOLIO.USER_ID }, Keys.KEY_STS_USER_PRIMARY, new TableField[] { StsUser.STS_USER.USER_ID }, true);
    public static final ForeignKey<StsPortfolioRecord, StsStockRecord> STS_PORTFOLIO_IBFK_2 = Internal.createForeignKey(StsPortfolio.STS_PORTFOLIO, DSL.name("sts_portfolio_ibfk_2"), new TableField[] { StsPortfolio.STS_PORTFOLIO.TICKER }, Keys.KEY_STS_STOCK_PRIMARY, new TableField[] { StsStock.STS_STOCK.TICKER }, true);
    public static final ForeignKey<StsStockHistoryRecord, StsStockRecord> STS_STOCK_HISTORY_IBFK_1 = Internal.createForeignKey(StsStockHistory.STS_STOCK_HISTORY, DSL.name("sts_stock_history_ibfk_1"), new TableField[] { StsStockHistory.STS_STOCK_HISTORY.TICKER }, Keys.KEY_STS_STOCK_PRIMARY, new TableField[] { StsStock.STS_STOCK.TICKER }, true);
    public static final ForeignKey<StsStockHistoryRecord, StsMarketHistoryRecord> STS_STOCK_HISTORY_IBFK_2 = Internal.createForeignKey(StsStockHistory.STS_STOCK_HISTORY, DSL.name("sts_stock_history_ibfk_2"), new TableField[] { StsStockHistory.STS_STOCK_HISTORY.MARKET_DAY }, Keys.KEY_STS_MARKET_HISTORY_PRIMARY, new TableField[] { StsMarketHistory.STS_MARKET_HISTORY.MARKET_DAY }, true);
    public static final ForeignKey<StsStockOrderRecord, StsStockRecord> STS_STOCK_ORDER_IBFK_1 = Internal.createForeignKey(StsStockOrder.STS_STOCK_ORDER, DSL.name("sts_stock_order_ibfk_1"), new TableField[] { StsStockOrder.STS_STOCK_ORDER.TICKER }, Keys.KEY_STS_STOCK_PRIMARY, new TableField[] { StsStock.STS_STOCK.TICKER }, true);
    public static final ForeignKey<StsStockOrderRecord, StsMarketHistoryRecord> STS_STOCK_ORDER_IBFK_2 = Internal.createForeignKey(StsStockOrder.STS_STOCK_ORDER, DSL.name("sts_stock_order_ibfk_2"), new TableField[] { StsStockOrder.STS_STOCK_ORDER.MARKET_DAY }, Keys.KEY_STS_MARKET_HISTORY_PRIMARY, new TableField[] { StsMarketHistory.STS_MARKET_HISTORY.MARKET_DAY }, true);
}
